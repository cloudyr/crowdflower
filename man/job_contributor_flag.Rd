% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contributor.R
\name{job_contributor_flag}
\alias{job_contributor_flag}
\alias{job_contributor_reject}
\alias{job_contributor_unflag}
\title{Flag/unflag/reject Contributors}
\usage{
job_contributor_flag(id, contributor, reason, ...)

job_contributor_unflag(id, contributor, reason, ...)

job_contributor_reject(id, contributor, reason, ...)
}
\arguments{
\item{id}{A character string containing an ID for job to be updated.}

\item{contributor}{A character string containing a contributor/contributor ID.}

\item{reason}{A character string containing a reason for flagging/unflagging/rejecting.}

\item{...}{Additional arguments passed to \code{\link{cf_query}}.}
}
\value{
A character string containing the job ID, invisibly.
}
\description{
Flag/unflag or reject a contributor
}
\examples{
\dontrun{
# create new job
f1 <- system.file("templates/instructions1.html", package = "crowdflower")
f2 <- system.file("templates/cml1.xml", package = "crowdflower")
j <- job_create(title = "Job Title", 
                instructions = readChar(f1, nchars = 1e8L),
                cml = readChar(f2, nchars = 1e8L))

# add data
d <- data.frame(variable = 1:3)
job_add_data(id = j, data = d)

# launch job
job_launch(id = j)

# get results
# get results for job
report_regenerate(id = j, report_type = "full")
r <- report_get(id = j, report_type = "full")

# Flag contributor
job_contributor_flag(j, r[1, "_worker_id"], "Looks problematic")

# Unflag contributor
job_contributor_unflag(j, r[1, "_worker_id"], "Actually, all is well")

# Reject contributor
job_contributor_reject(j, r[1, "_worker_id"], "This is unacceptable.")

# delete job
job_delete(j)
}

}
\seealso{
\code{\link{job_create}}, \code{\link{results_get}}, \code{\link{job_contributor_bonus}}
}
\keyword{contributors}

