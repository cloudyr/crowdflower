% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report_get.R
\name{report_get}
\alias{report_get}
\alias{report_regenerate}
\title{Generate and retrieve job results}
\usage{
report_get(id, report_type = c("full", "aggregated", "json", "gold_report",
  "workset", "source"), csv_args = list(stringsAsFactors = FALSE, check.names
  = FALSE), verbose = TRUE, ...)

report_regenerate(id, report_type = c("full", "aggregated", "json",
  "gold_report", "workset", "source"), verbose = TRUE, ...)
}
\arguments{
\item{id}{A character string containing an ID for job.}

\item{report_type}{Type of report}

\item{csv_args}{A list of arguments passed to \code{\link[utils]{read.csv}} when \code{report_type = 'source'}.}

\item{verbose}{A logical indicating whether to print additional information about the request.}

\item{...}{Additional arguments passed to \code{\link{cf_query}}.}
}
\value{
If \code{report_type = 'json'}, a list. Otherwise a data.frame.
}
\description{
Results
}
\details{
\code{report_get} regenerates one of six types of reports within a job. Here is how they are described by Crowdflower:
\itemize{
  \item \code{full}: Returns the Full report containing every judgment.
  \item \code{aggregated}: Returns the Aggregated report containing the aggregated response for each row.
  \item \code{json}: Returns the JSON report containing the aggregated response, as well as the individual judgments, for the first 50 rows.
  \item \code{gold_report}: Returns the Test Question report.
  \item \code{workset}: Returns the Contributor report.
  \item \code{source}: Returns a CSV of the source data uploaded to the job.
}

Where possible, the package tries to return a data.frame of the results.
}
\examples{
\dontrun{
# create new job
f1 <- system.file("templates/instructions1.html", package = "crowdflower")
f2 <- system.file("templates/cml1.xml", package = "crowdflower")
j <- job_create(title = "Job Title", 
                instructions = readChar(f1, nchars = 1e8L),
                cml = readChar(f2, nchars = 1e8L))

# add data
d <- data.frame(variable = 1:3)
job_add_data(id = j, data = d)

# launch job
job_launch(id = j)

# get results for job
report_regenerate(id = j, report_type = "full")
report_get(id = j, report_type = "full")

# delete job
job_delete(j)
}
}
\references{
\href{https://success.crowdflower.com/hc/en-us/articles/202703425-CrowdFlower-API-Requests-Guide#report_get}{Crowdflower API documentation}
}
\seealso{
\code{\link{cf_account}}
}
\keyword{data}
\keyword{jobs}
